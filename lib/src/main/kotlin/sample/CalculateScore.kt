/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package sample

fun calculateScore(input: String) = convertToFrames(input).sum()

private fun convertToFrames(input: String): List<Int> {
    val stringFrames = input.replace('-', '0').split("||", "|")
    val frameData = stringFrames.windowed(3, 1, true)
        .take(10)

    return frameData.map(buildFrame)
}

private val buildFrame = { frameData: List<String> ->
    val frame = frameData.first()
    val bonusRolls = getBonusRolls(frameData.drop(1))

    if (frame == "X") {
        10 + bonusRolls.sum()
    } else if (frame[1] == '/') {
        10 + bonusRolls.first()
    } else {
        frame.sumOf { it.digitToInt() }
    }
}

private fun getBonusRolls(nextAttempts: List<String>): List<Int> {
    var nextRolls = nextAttempts.first().toCharArray().toList()
    if (nextRolls.size < 2 && nextAttempts.size == 2) nextRolls += nextAttempts.last().toCharArray().toList()
    nextRolls = nextRolls.take(2)

    if (nextRolls.size == 2 && nextRolls [1] == '/') {
        val first = nextRolls.first()
        val second = (10 - nextRolls.first().digitToInt()).digitToChar()
        nextRolls = listOf(first, second)
    }

    return nextRolls.map { if (it == 'X') 10 else it.digitToInt() }
}