/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package sample

fun calculateScore(input: String) = convertToFrames(input).sum()

private fun convertToFrames(input: String): List<Int> {
    val stringFrames = input.replace('-', '0').split("||", "|")
    val frameData = stringFrames.windowed(3, 1, true)
        .take(10)

    return frameData.map(buildFrame)
}

private val buildFrame = { frameData: List<String> ->
    val frame = frameData.first()
    val nextAttempts = frameData.drop(1)

    if (frame == "X") {
        10 +  getBonusRolls(BonusRollsAmount.TWO, nextAttempts).sum()
    } else if (frame[1] == '/') {
        10 + getBonusRolls(BonusRollsAmount.ONE, nextAttempts).first()
    } else {
        frame.sumOf { it.digitToInt() }
    }
}

private enum class BonusRollsAmount {
    ONE, TWO
}

private fun getBonusRolls(amount: BonusRollsAmount, nextAttempts: List<String>): List<Int> {
    val rollsAmount = if (amount == BonusRollsAmount.ONE) 1 else 2
    var nextRolls = nextAttempts.first().toCharArray()
    if (nextAttempts.size == 2) nextRolls += nextAttempts.last().toCharArray()

    return nextRolls.take(rollsAmount)
        .map { if (it == 'X') 10 else it.digitToInt() }
}