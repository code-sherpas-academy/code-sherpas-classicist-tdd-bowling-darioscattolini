/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package sample

import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test
import org.junit.jupiter.params.ParameterizedTest
import org.junit.jupiter.params.provider.CsvSource


class CalculateScoreTest {
    @Test
    fun `returns 0 for no pins knocked down`() {
        assertThat(calculateScore("--|--|--|--|--|--|--|--|--|--||")).isEqualTo(0)
    }

    @ParameterizedTest
    @CsvSource(
        "3-|--|--|--|--|--|--|--|--|--||, 3",
        "-7|--|--|--|--|--|--|--|--|--||, 7",
        "26|--|--|--|--|--|--|--|--|--||, 8",
        "--|--|--|4-|--|--|--|--|--|--||, 4",
        "--|--|--|--|-5|--|--|--|--|--||, 5",
        "--|--|--|--|--|--|--|--|71|--||, 8"
    )
    fun `returns amount of pins knocked down for any frame without strike or spare`(input: String, expectedScore: Int) {
        assertThat(calculateScore(input)).isEqualTo(expectedScore)
    }

    @Test
    fun `returns amount of pins knocked down for many frames without strikes or spares`() {
        assertThat(calculateScore("--|2-|-3|18|-1|--|6-|--|-4|--||")).isEqualTo(25)
    }

    @ParameterizedTest
    @CsvSource(
        "X|--|--|--|--|--|--|--|--|--||, 10",
        "X|3-|--|--|--|--|--|--|--|--||, 16",
        "X|-7|--|--|--|--|--|--|--|--||, 24",
        "X|26|--|--|--|--|--|--|--|--||, 26",
        "X|X|--|--|--|--|--|--|--|--||, 30",
        "X|X|31|--|--|--|--|--|--|--||, 41",
        "--|--|X|71|--|--|--|--|--|--||, 28",
    )
    fun `returns 10 + pins knocked down in next two attempts for any frame with strike`(input: String, expectedScore: Int) {
        assertThat(calculateScore(input)).isEqualTo(expectedScore)
    }
}
